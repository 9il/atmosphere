{"name":"Atmosphere gm","tagline":"Statistical package","body":"Atmosphere GM contains an experimental algorithms for new generation of likelihood maximization methods. The goal of this library is to create a reliable and simple in use technology that can be used by software engineers. Package is growing step by step with mathematical publications.\r\n\r\n# Travis-CI Status\r\n+ [![Build Status](https://travis-ci.org/9il/atmosphere_gm.svg)](https://travis-ci.org/9il/atmosphere_gm) - [Atmosphere GM](https://travis-ci.org/9il/atmosphere_gm)\r\n+ [![Build Status](https://travis-ci.org/9il/atmosphere_gm_test.svg)](https://travis-ci.org/9il/atmosphere_gm_test) - [Atmosphere GM Test](https://travis-ci.org/9il/atmosphere_gm_test)\r\n\r\n#Features\r\n 1. Normal variance-mean mixtures\r\n  + Generalized hyperbolic distribution\r\n  + Generalized variance-gamma distribution\r\n 2. Separating mixtures of probability distributions\r\n  + Grid methods\r\n  + Likelihood maximization\r\n  + Optimization over sliding window\r\n 3. Generalized probability distributions\r\n  + Density functions\r\n  + Cumulative functions\r\n  + Quantiles\r\n  + Random observations generators\r\n\r\n#### What can I use this package for? \r\nAtmosphere GM can be used for risk management in economics, finance and thermonuclear reactors ;-)\r\n\r\n#Documentation\r\nDocumentation (API) can be found [here](http://9il.github.io/atmosphere_gm/doc/atmosphere.html).\r\n## Changelog\r\nSee [release notes](https://github.com/9il/atmosphere_gm/releases).\r\n\r\n#Installation\r\n## BLAS & LAPACK\r\nYou need BLAS and LAPACL libraries installed.\r\n\r\nIf you're on **Ubuntu**, you can install default package \r\n```\r\nsudo apt-get install libblas-dev liblapack-dev \r\n```\r\n\r\n**OS X** comes with the [Accelerate framework](https://developer.apple.com/library/mac/documentation/Accelerate/Reference/BLAS_Ref/index.html#//apple_ref/doc/uid/TP40009457) built in. \r\n\r\nThere is no instruction for **Windows**. You are welcome to create it.\r\n\r\n## Intro to D\r\n1. Install D [compiler](http://dlang.org/download.html)\r\n2. Install [DUB registry](http://code.dlang.org/download)\r\n3. Read about [DUB](http://code.dlang.org/about)\r\n4. Read about [DUB package format](http://code.dlang.org/package-format)\r\n\r\n## Atmosphere GM\r\nTo use [this package](http://code.dlang.org/packages/atmosphere_gm) put the following dependency into your project's\r\n[dub](http://code.dlang.org/about).json into the dependencies section\r\n```json\r\n{\r\n\t...\r\n\t\"dependencies\": {\r\n\t\t\"atmosphere_gm\": \">=0.0.11\"\r\n\t}\r\n}\r\n```\r\nand the following imports into your program\r\n```D\r\nimport atmosphere;\r\nimport distribution;\r\n```\r\n\r\n# Compilers and optimization\r\nThe [DMD](http://dlang.org/download.html) compiler is easy way to start.\r\nTo compile your program in release mode use the following build options\r\n```shell\r\ndub build --build=release\r\n```\r\n## LDC\r\nIt is suggested the [LLVM D Compiler](https://github.com/ldc-developers/ldc/releases) be used for benchmarks.\r\nTo compile your program in release mode with LDC use the following build options\r\n```\r\ndub build --build=release --compiler=ldc2\r\n```\r\nTo fine-tune your program for native CPU add the following code into your `dub.json`:\r\n```\r\n{\r\n\t...\r\n\t\"dflags-ldc\": [\"-mcpu=native\"],\r\n}\r\n```\r\nFor more options run `ldc2 -help`.\r\n\r\nSee also [Atmosphere GM Test](https://github.com/9il/atmosphere_gm_test). \r\n\r\n# Bugs\r\nSee [bug list](https://github.com/9il/atmosphere_gm/labels/bug).\r\n\r\n# TODO & Contribution\r\nContribution is welcome.\r\n#### TODO list\r\n+ **Windows** instruction for BLAS & LAPACK installation.\r\n+ Parameter estimation algorithms for generalized inverse Gaussian and generalized gamma samples.\r\n+ Publication references\r\n+ More `unittest`s\r\n+ Examples\r\n+ [ReadTheDocs](https://readthedocs.org) documentation.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}